apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "/userservice"
            - "--externalApiPort={{ .Values.core.externalApiPort }}"
            - "--externalApiSecuredPort={{ .Values.core.externalApiSecuredPort }}"
            - "--reverseProxyAuthenticationPort={{ .Values.core.reverseProxyAuthenticationPort }}"
            - "--reverseProxySecuredPort={{ .Values.core.reverseProxySecuredPort }}"
            - "--jwtExpiryTime={{ .Values.core.jwtExpiryTime }}"
            - "--jwtSecretKey={{ .Values.core.jwtSecretKey }}"
            - "--authenticationsCacheExpiryTime={{ .Values.core.authenticationsCacheExpiryTime }}"
            - "--authenticationConfigFile={{ .Values.core.authenticationConfigFile }}"
            - "--tlsCertificatePath={{ .Values.secrets.tls.crt }}"
            - "--tlsKeyPath={{ .Values.secrets.tls.key }}"
            - "--caCertificatePath={{ .Values.secrets.ca.crt }}"
            - "--caKeyPath={{ .Values.secrets.ca.key }}"
          ports:
            - containerPort: {{ .Values.core.externalApiPort }}
              name: http-api
            - containerPort: {{ .Values.core.externalApiSecuredPort}}
              name: http-mtls-api
            - containerPort: {{ .Values.core.reverseProxyAuthenticationPort }}
              name: http-proxy
            - containerPort: {{ .Values.core.reverseProxySecuredPort }}
              name: http-mtls-proxy
          volumeMounts:
            - mountPath: /authentications
              name: authentication-config
            - mountPath: /etc/certs/tls
              name: tls-certs
            - mountPath: /etc/certs/ca
              name: ca-certs
      volumes:
        - name: authentication-config
          configMap:
            name: {{ .Chart.Name }}-authentication-config
            items:
              - key: authentications.json
                path: config.json
        - name: tls-certs
          secret:
            secretName: {{ .Chart.Name }}-tls-certs
            items:
              - key: tls.crt
                path: tls.cert
              - key: tls.key
                path: tls.key
        - name: ca-certs
          secret:
            secretName: {{ .Chart.Name }}-ca-certs
            items:
              - key: ca.crt
                path: ca.cert
              - key: ca.key
                path: ca.key
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
